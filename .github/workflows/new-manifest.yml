name: Make Manifest

on:
  workflow_dispatch:

  push:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Make Manifest
        env:
          namespace: otpx
          storageSize: 1G
          mysqlVersion: 8.3.0
          rootUser: otpx
          rootPassword: otpx
          #rootHost: %
          memory: 2G
          cpu: 2
          private: false
          token: ${{ secrets.TOKEN_PUSH }}
          reponame: $(echo ${{ github.repository }} | cut -d "/" -f2)-${namespace}
          owner: ${{ github.repository_owner }}
        shell: bash
        run: |
          cancel () {
            echo "Manifesto $namespace já existe."
            echo "SAINDO...."
            curl -s -H "Authorization: token ${{ github.token }}" \
            -X POST "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel"
            sleep infinity
          }
          
          
          REPO_CHECK=$(curl -H "Authorization: token $token" -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/$owner/$reponame)
          # Checa se o código de status HTTP é 404 (Não encontrado)
          if [ "$REPO_CHECK" -eq 404 ]; then
            echo "Repositório não existe. Criando repositório..."
            curl -H "Authorization: token $token" -d "{\"name\":\"$reponame\", \"private\":$private}" https://api.github.com/user/repos
          else
            cancel
          fi
          
          
          # cd ..
          # sudo rm -r $(echo ${{ github.repository }} | cut -d "/" -f2)
          git clone https://github.com/$owner/$reponame}
          cd $reponame
          
          cp -r "template/*" "$reponame"
          
          # ## Alterações no deployment.yml
          # # Seta nome do namespace no kind: Namespace
          # sed -i "/name: template/s/name: template/name: $namespace/" "$namespace/deployment.yml"
          # # Seta namespace de todos os outros
          # sed -i "s/namespace:.*/namespace: $namespace/g" "$namespace/deployment.yml"
          # # Seta StorageSize
          # sed -i '/requests:/!b; :a; n; /^\s\{8\}storage:/ s/:.*/'": $storageSize"'/; ta' "$namespace/deployment.yml"
          # # Seta RootUser
          # sed -i '/stringData:/!b; :a; n; /^\s\{2\}rootUser:/ s/:.*/'": \"$rootUser\""'/; ta' "$namespace/deployment.yml"
          # # Seta RootPassword
          # sed -i "s/rootPassword:.*/rootPassword: \"$rootPassword\"/" "$namespace/deployment.yml"
          # ## Seta RootHost
          # # sed -i "s/rootHost:.*/rootHost: \"$rootHost\"/" "$namespace/deployment.yml"
          # # Seta mysqlVersion
          # sed -i "s/version:.*/version: $mysqlVersion/" "$namespace/deployment.yml"
          # # Seta Menory e Cpu limits
          # sed -i '/limits:/!b; :a; n; /^\s\{10\}memory:/ s/:.*/: '\"$memory\"'/; /^\s\{10\}cpu:/ s/:.*/: '\"$cpu\"'/; ta' "$namespace/deployment.yml"
          
          # ## Aletação no remove-cluster.sh
          # sed -i "s/nameSpace=.*/nameSpace=$namespace/" "$namespace/remove-cluster.sh"
          
          # ## Cria arquivo de sync
          # sed "s/name:.*/name: Sync $namespace/" "$namespace//sync"
          # mv "$namespace//sync" ".github/workflows/sync-$namespace.yml"
          
          # echo "namespace=$namespace" >> $GITHUB_ENV
      
      ## Tmate ##
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
          
      # - name: Update github
      #   run: |
      #     git add --all
      #     git config --local user.email "gitbarnabedikartola@users.noreply.github.com"
      #     git config --local user.name "gitbarnabedikartola"
      #     if [ -n "$(git commit -m "create $namespace" -a | grep "nothing to commit")" ];then exit 0; fi
      #     git push https://${{ secrets.token_PUSH }}@github.com/${{ github.repository }}

